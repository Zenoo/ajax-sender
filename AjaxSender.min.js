class AjaxSender{constructor(url,parameters){if(this.xhr=new XMLHttpRequest,this._parameters={method:parameters.method||"GET",data:parameters.data||{},responseType:parameters.responseType||"json",headers:parameters.headers||{},progress:parameters.progress,load:parameters.load,error:parameters.error,uploadProgress:parameters.uploadProgress,uploadLoad:parameters.uploadLoad},this._handleCallbacks(),"GET"==this._parameters.method?this.xhr.open("GET",url+"?"+this._objectToURL(this._parameters.data)):this.xhr.open(this._parameters.method,url),Object.entries(this._parameters.headers).forEach(([header,value])=>this.xhr.setRequestHeader(header,value)),"GET"==this._parameters.method)this.xhr.send();else if(this._parameters.data instanceof FormData)this._parameters.data.processData=!1,this._parameters.data.contentType=!1,this.xhr.send(this._parameters.data);else{const formData=new FormData;formData.processData=!1,formData.contentType=!1,this._objectToFlat(formData,this._parameters.data);for(let pair of formData.entries())console.log(pair[0]+": "+pair[1]);this.xhr.send(formData)}}_handleCallbacks(){this._parameters.progress&&this.xhr.addEventListener("progress",()=>{Reflect.apply(this._parameters.progress,null,[this.xhr.response])}),this._parameters.load&&this.xhr.addEventListener("load",()=>{200==this.xhr.status?Reflect.apply(this._parameters.load,null,[this.xhr.response]):this._parameters.error?Reflect.apply(this._parameters.error,null,[this.xhr]):console.log(this.xhr)}),this.xhr.addEventListener("error",this._parameters.error?()=>{Reflect.apply(this._parameters.error,null,[this.xhr])}:()=>{console.log(this.xhr)}),this._parameters.uploadProgress&&this.xhr.upload.addEventListener("progress",()=>{Reflect.apply(this._parameters.uploadProgress,null,[this.xhr.response])}),this._parameters.uploadLoad&&this.xhr.upload.addEventListener("load",()=>{Reflect.apply(this._parameters.uploadLoad,null,[this.xhr.response])}),this.xhr.upload.addEventListener("error",this._parameters.error?()=>{Reflect.apply(this._parameters.error,null,[this.xhr])}:()=>{console.log(this.xhr)})}_objectToURL(object,prefix){const str=[];for(const p in object)if(Reflect.ownKeys(object).includes(p)){const k=prefix?prefix+"["+p+"]":p,v=object[p];str.push(null!==v&&"object"==typeof v?this._objectToURL(v,k):encodeURIComponent(k)+"="+encodeURIComponent(v))}return str.join("&")}_objectToFlat(formData,data,parentKey){if(!data||"object"!=typeof data||data instanceof Date||data instanceof File){const value=null===data?"":data;formData.append(parentKey,value)}else Object.keys(data).forEach(key=>{this._objectToFlat(formData,data[key],parentKey?`${parentKey}[${key}]`:key)})}stop(){return this.xhr.abort(),this}}