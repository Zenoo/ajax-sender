class AjaxSender{constructor(url,parameters){this.xhr=new XMLHttpRequest,this._parameters={method:parameters.method||"GET",data:parameters.data||{},responseType:parameters.responseType||"json",headers:parameters.headers||{},progress:parameters.progress,load:parameters.load,error:parameters.error,uploadProgress:parameters.uploadProgress,uploadLoad:parameters.uploadLoad},this._handleCallbacks(),this.xhr.responseType=this._parameters.responseType,"GET"==this._parameters.method?this.xhr.open("GET",url+"?"+this._objectToURL(this._parameters.data)):this.xhr.open(this._parameters.method,url),Object.entries(this._parameters.headers).forEach(([header,value])=>this.xhr.setRequestHeader(header,value)),"GET"==this._parameters.method?this.xhr.send():this._parameters.data instanceof FormData?(this._parameters.data.processData=!1,this._parameters.data.contentType=!1,this.xhr.send(this._parameters.data)):this.xhr.send(JSON.stringify(this._parameters.data))}_handleCallbacks(){this._parameters.progress&&this.xhr.addEventListener("progress",()=>{Reflect.apply(this._parameters.progress,null,[this.xhr.response])}),this._parameters.load&&this.xhr.addEventListener("load",()=>{200==this.xhr.status?Reflect.apply(this._parameters.load,null,[this.xhr.response]):this._parameters.error?Reflect.apply(this._parameters.error,null,[this.xhr]):console.log(this.xhr)}),this.xhr.addEventListener("error",this._parameters.error?()=>{Reflect.apply(this._parameters.error,null,[this.xhr])}:()=>{console.log(this.xhr)}),this._parameters.uploadProgress&&this.xhr.upload.addEventListener("progress",()=>{Reflect.apply(this._parameters.uploadProgress,null,[this.xhr.response])}),this._parameters.uploadLoad&&this.xhr.upload.addEventListener("load",()=>{Reflect.apply(this._parameters.uploadLoad,null,[this.xhr.response])}),this.xhr.upload.addEventListener("error",this._parameters.error?()=>{Reflect.apply(this._parameters.error,null,[this.xhr])}:()=>{console.log(this.xhr)})}_objectToURL(object,prefix){const str=[];for(const p in object)if(Reflect.ownKeys(object).includes(p)){const k=prefix?prefix+"["+p+"]":p,v=object[p];str.push(null!==v&&"object"==typeof v?this._objectToURL(v,k):encodeURIComponent(k)+"="+encodeURIComponent(v))}return str.join("&")}stop(){return this.xhr.abort(),this}}