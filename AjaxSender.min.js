class AjaxSender{constructor(url,parameters){if(this.xhr=new XMLHttpRequest,parameters.progress&&this.xhr.addEventListener("progress",()=>{Reflect.apply(parameters.progress,null,[this.xhr.response])}),parameters.load&&this.xhr.addEventListener("load",()=>{Reflect.apply(parameters.load,null,[this.xhr.response])}),this.xhr.addEventListener("error",parameters.error?()=>{Reflect.apply(parameters.error,null,[this.xhr.response])}:e=>{console.log(e)}),parameters.uploadProgress&&this.xhr.upload.addEventListener("progress",()=>{Reflect.apply(parameters.uploadProgress,null,[this.xhr.response])}),parameters.uploadLoad&&this.xhr.upload.addEventListener("load",()=>{Reflect.apply(parameters.uploadLoad,null,[this.xhr.response])}),this.xhr.upload.addEventListener("error",parameters.error?()=>{Reflect.apply(parameters.error,null,[this.xhr.response])}:e=>{console.log(e)}),this.xhr.responseType=parameters.responseType||"json",this.xhr.open(parameters.method?parameters.method:"GET",url),Object.entries(parameters.headers||{}).forEach(([header,value])=>this.xhr.setRequestHeader(header,value)),parameters.data instanceof FormData)parameters.data.processData=!1,parameters.data.contentType=!1,this.xhr.send(parameters.data);else{const formData=new FormData;formData.processData=!1,formData.contentType=!1,Object.keys(parameters.data||{}).forEach(key=>formData.append(key,"object"==typeof parameters.data[key]?JSON.stringify(parameters.data[key]):parameters.data[key])),this.xhr.send(formData)}}stop(){return this.xhr.abort(),this}}